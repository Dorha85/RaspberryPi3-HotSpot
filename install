#!/bin/bash
# Raspberry Pi Wireless Hotspot Installation Script

clear

echo "======================================================="
echo "======== Setting up Raspberry Pi WiFi hotspot ========="
echo "======================================================="

read -r -p "This script will make changes to your system which may break some applications and may require you to reimage your SD card. Are you sure that you wish to continue? [y/N] " confirm

if [[ $confirm =~ ^([yY][eE][sS]|[yY])$ ]]
then
	clear
	echo "Updating package lists"

	apt-get -y -qq update

	echo "Installing dependencies"

	apt-get -y -qq install hostapd udhcpd


	####################################################################
	# check for and back up existing config files
	####################################################################

	echo "Backing up existing config files"

	if [ -f /etc/udhcpd.conf ]
	then
		cp /etc/udhcpd.conf /etc/udhcpd.conf.old
	fi

	if [ -f /etc/default/udhcpd ]
	then
		cp /etc/default/udhcpd /etc/default/udhcpd.old
	fi

	if [ -f /etc/network/interfaces ]
	then
		cp /etc/network/interfaces /etc/network/interfaces.old
	fi

	if [ -f /etc/hostapd/hostapd.conf ]
	then
		cp /etc/hostapd/hostapd.conf /etc/hostapd/hostapd.conf.old
	fi

	if [ -f /etc/default/hostapd ]
	then
		cp /etc/default/hostapd /etc/default/hostapd.old
	fi

	if [ -f /etc/sysctl.conf ]
	then
		cp /etc/sysctl.conf /etc/sysctl.conf.old
	fi


	if [ -f /etc/iptables.ipv4.nat ]
	then
		cp /etc/iptables.ipv4.nat /etc/iptables.ipv4.nat.old
	fi


	echo "Config Files backed up"

	####################################################################
	# copy configs to relevant directories
	####################################################################
	echo "Configuring DHCPCD static IP"
				cp ./etc/dhcpcd.conf /etc/dhcpcd.conf
				
	echo "Configuring DHCP"
				cp ./config-files/udhcpd_google.conf /etc/udhcpd.conf

	echo "Configuring interfaces"
	if [ -n "${_ROUTER}" ]; then
		sed -e "s/ROUTER/${_ROUTER}/g" ./config-files/interfaces-template > /etc/network/interfaces
	else
		cp ./config-files/interfaces /etc/network
	fi
	
	echo "Configuring hostapd"
	read -r -p "Do you want to ues the default wifi password of adrian12345 and ssid of PiFiPi3? [y/N] " althostapdresponse

	if [[ $althostapdresponse =~ ^([yY][eE][sS]|[yY])$ ]]
	then
		cp ./config-files/hostapd.conf /etc/hostapd
	else
		read -r -p "Please enter a new ssid: " _SSID
		_PASSWORD1="0"
		_PASSWORD2="1"
		read -r -s -p "Please enter a new password atleast 8 characters long (lenght is not checked): " _PASSWORD1
		echo
		read -r -s -p "Please enter the new password again: " _PASSWORD2
		echo
		while [ ${_PASSWORD1} != ${_PASSWORD2} ]
		do
			echo "Password mismatch please try again."
			read -r -s -p "Please enter a new password atleast 8 characters long (lenght is not checked): " _PASSWORD1
			read -r -s -p "Please enter the new password again: " _PASSWORD2
			echo
		done
		sed -e "s/adrian12345/${_PASSWORD1}/g" -e "s/PiFiPi3/${_SSID}/g" ./config-files/hostapd.conf > /etc/hostapd/hostapd.conf
	fi
	cp ./config-files/hostapd /etc/default
fi

	echo "Configuring NAT"
	cp ./config-files/sysctl.conf /etc

	echo "Configuring iptables"
		cp ./config-files/iptables.ipv4.nat /etc
		
	touch /var/lib/misc/udhcpd.leases

	echo "Initialising access point"
	service hostapd start
	update-rc.d hostapd enable

	echo "Initialising DHCP server"
	service udhcpd start
	update-rc.d udhcpd enable


	echo "================================================================"
	echo "=================== Configuration complete! ===================="
	echo "================================================================"

	echo "+++++++++++++++++  REBOOTING in 10 SECONDS  ++++++++++++++++++++"
	echo "++++++++++++++++++++++ CTL-C to cancel ++++++++++++++++++++++++"

	sleep 10
	reboot

	exit 0

#else
 #   exit 1

fi






